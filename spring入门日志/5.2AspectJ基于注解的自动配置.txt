注意：只要使用了注解（不论是@Aspectj注解还是以前的@Component），那么通知顺序就会和纯手动配置的不一样

xml部分：
    <aop:aspectj-autoproxy/>
    <!--配置注解生效-->
    <aop:config>
        <aop:aspect ref="aspectJ"/>
    </aop:config>

切面类部分：
    /*声明一个公共的切入点*/
    @Pointcut("execution(* com.jacketzc.*.*.*(..))")
    public void pointcut(){}

    @Before("pointcut()")
    public void before(JoinPoint joinPoint){
        System.out.println("前置通知"+joinPoint);
    }
//前置通知使用了公共的切入点
    @AfterReturning(pointcut = "execution(* com.jacketzc.*.*.*(..))",returning = "obj")
    public void afterRun(Object obj){
        System.out.println("后置通知"+obj);
    }
//后置通知使用了单独的切入点
//注意注解的参数写法