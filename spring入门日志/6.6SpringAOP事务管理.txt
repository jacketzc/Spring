springAOP的价值在于简化获取代理的方式
//Spring半自动配置代理需要使用代理工厂bean
springAOP事务管理的特点在于“通知”也就是增强代码是封装好的，而不是手写的
//之前使用aop自动切面注入都需要手写invoke方法，这里不用，因为没有理由在事务中添加预设功能外的方法
！注：需要weaver.jar(简写，就是织入包)，这个包不在标准的springjar中


service层：没有变化
xml部分：
1.去除了配置代理工厂bean	
2.配置tx事务（需要添加tx标签）
3.配置aop
    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="manager">
     //使用tx标签意味着需要在xml头部引入规则
        <tx:attributes>
         //经过测试，如果全部使用默认设置，那么<tx:attributes>这一部分可以不写
            <!--事务详情：传播行为、隔离级别-->
            <!--如果使用默认，可以不写-->
            <tx:method name="transfer" propagation="REQUIRED" isolation="DEFAULT"/>
            //我不知道这个方法名的意义，它换成任意的名字都是一样的
        </tx:attributes>
    </tx:advice>

    <aop:config >
        <!--切入点可以单独配置一个，也可以和通知一起配置-->
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.jacketzc.service.*.*(..))"/>
    </aop:config>
